// Generated by CoffeeScript 1.4.0
(function() {
  var Parser, puer, pwd, sysPath,
    _this = this;

  sysPath = require("path");

  puer = require("./index");

  Parser = require("./helper").Parser;

  pwd = process.cwd();

  exports.run = function(args) {
    var option, parser;
    option = {};
    parser = new Parser();
    parser.on("-a --addon <file>", "your addon's path", function(file) {
      return option.addon = sysPath.resolve(pwd, file);
    });
    parser.on("-p --port <port>", "server's listen port, 8000 default", function(port) {
      if (port) {
        return option.port = parseInt(port);
      }
    });
    parser.on("-d --dir <dir>", "your customer working dir. default current dir ", function(dir) {
      if (dir) {
        return option.dir = sysPath.resolve(pwd, dir);
      }
    });
    parser.on("--no-reload", "close  auto-reload feature,(not recommended)", function() {
      return option.reload = false;
    });
    parser.on("--no-launch", "close the auto launch feature", function() {
      return option.launch = false;
    });
    parser.on("-i --ignored <regexp>", "ignored file under watching", function(reg) {
      var ignored;
      ignored = reg.replace(/^\/|\/$/g, "");
      return option.ignored = new RegExp(ignored);
    });
    parser.on("-t --time <ms>", "watching interval time (ms), default 500ms", function(time) {
      time = parseInt(time);
      if (time > 10) {
        return option.interval = time;
      }
    });
    parser.on("-h --help", "help list", function(haha) {
      var man;
      option.help = true;
      man = "\n\nUsage:\tpuer [options...]\n\nOptions:\n" + (parser.output()) + "  ";
      return console.log(man);
    });
    parser.run(args);
    console.log("your option is", option);
    if (!option.help) {
      return puer(option);
    }
  };

}).call(this);
